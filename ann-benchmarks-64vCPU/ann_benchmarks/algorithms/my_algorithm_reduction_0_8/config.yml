float:
  any:
  - base_args: ['@metric']
    constructor: MyAlgorithmReduction
    disabled: false
    docker_tag: ann-benchmarks-my-algorithm-reduction-0-8
    module: ann_benchmarks.algorithms.my_algorithm_reduction_0_8
    name: my-algorithm-reduction-0-8
    run_groups:
      M-12:
        arg_groups: [{M: 12, efConstruction: 500, useJL: true, jlTargetEps: 0.8, jlMinDim: 64}]
        args: {}
        query_args: [[10, 20, 40, 80, 120, 200, 400, 600, 800]]
      M-16:
        arg_groups: [{M: 16, efConstruction: 500, useJL: true, jlTargetEps: 0.8, jlMinDim: 64}]
        args: {}
        query_args: [[10, 20, 40, 80, 120, 200, 400, 600, 800]]
      M-24:
        arg_groups: [{M: 24, efConstruction: 500, useJL: true, jlTargetEps: 0.8, jlMinDim: 64}]
        args: {}
        query_args: [[10, 20, 40, 80, 120, 200, 400, 600, 800]]
      M-36:
        arg_groups: [{M: 36, efConstruction: 500, useJL: true, jlTargetEps: 0.8, jlMinDim: 64}]
        args: {}
        query_args: [[10, 20, 40, 80, 120, 200, 400, 600, 800]]
      M-4:
        arg_groups: [{M: 4, efConstruction: 500, useJL: true, jlTargetEps: 0.8, jlMinDim: 64}]
        args: {}
        query_args: [[10, 20, 40, 80, 120, 200, 400, 600, 800]]
      M-48:
        arg_groups: [{M: 48, efConstruction: 500, useJL: true, jlTargetEps: 0.8, jlMinDim: 64}]
        args: {}
        query_args: [[10, 20, 40, 80, 120, 200, 400, 600, 800]]
      M-64:
        arg_groups: [{M: 64, efConstruction: 500, useJL: true, jlTargetEps: 0.8, jlMinDim: 64}]
        args: {}
        query_args: [[10, 20, 40, 80, 120, 200, 400, 600, 800]]
      M-8:
        arg_groups: [{M: 8, efConstruction: 500, useJL: true, jlTargetEps: 0.8, jlMinDim: 64}]
        args: {}
        query_args: [[10, 20, 40, 80, 120, 200, 400, 600, 800]]
      M-96:
        arg_groups: [{M: 96, efConstruction: 500, useJL: true, jlTargetEps: 0.8, jlMinDim: 64}]
        args: {}
        query_args: [[10, 20, 40, 80, 120, 200, 400, 600, 800]]